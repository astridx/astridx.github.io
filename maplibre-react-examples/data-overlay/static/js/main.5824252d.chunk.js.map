{"version":3,"sources":["components/Legend.js","components/Optionsfield.js","Map.js","App.js","index.js"],"names":["Legend","props","className","active","name","description","stops","map","stop","i","key","style","backgroundColor","toLocaleString","Optionsfield","options","option","onChange","changeState","checked","property","type","Map","mapContainerRef","useRef","useState","setActive","setMap","useEffect","maplibregl","container","current","center","zoom","on","addSource","data","setLayoutProperty","addLayer","id","source","setPaintProperty","remove","paint","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5824252d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Legend = (props) => {\n  const renderLegendKeys = (stop, i) => {\n    return (\n      <div key={i} className=\"txt-s\">\n        <span\n          className=\"mr6 round-full w12 h12 inline-block align-middle\"\n          style={{ backgroundColor: stop[1] }}\n        />\n        <span>{`${stop[0].toLocaleString()}`}</span>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"bg-white absolute bottom right mr12 mb24 py12 px12 shadow-darken10 round z1 wmax180\">\n        <div className=\"mb6\">\n          <h2 className=\"txt-bold txt-s block\">{props.active.name}</h2>\n          <p className=\"txt-s color-gray\">{props.active.description}</p>\n        </div>\n        {props.stops.map(renderLegendKeys)}\n      </div>\n    </>\n  );\n};\n\nexport default Legend;\n","import React from \"react\";\n\nconst Optionsfield = (props) => {\n  const renderOptions = (option, i) => {\n    return (\n      <label key={i} className=\"toggle-container\">\n        <input\n          onChange={() => props.changeState(i)}\n          checked={option.property === props.property}\n          name=\"toggle\"\n          type=\"radio\"\n        />\n        <div className=\"toggle txt-s py3 toggle--active-white\">\n          {option.name}\n        </div>\n      </label>\n    );\n  };\n  return (\n    <div className=\"toggle-group absolute top left ml12 mt12 border border--2 border--white bg-white shadow-darken10 z1\">\n      {props.options.map(renderOptions)}\n    </div>\n  );\n};\n\nexport default Optionsfield;\n","import React, { useRef, useEffect, useState } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport \"maplibre-gl/dist/maplibre-gl.css\"\nimport Legend from './components/Legend';\nimport Optionsfield from './components/Optionsfield';\nimport './Map.css';\nimport data from './data.json';\n\nconst Map = () => {\n  const options = [\n    {\n      name: 'Population',\n      description: 'Estimated total population',\n      property: 'pop_est',\n      stops: [\n        [0, '#f8d5cc'],\n        [1000000, '#f4bfb6'],\n        [5000000, '#f1a8a5'],\n        [10000000, '#ee8f9a'],\n        [50000000, '#ec739b'],\n        [100000000, '#dd5ca8'],\n        [250000000, '#c44cc0'],\n        [500000000, '#9f43d7'],\n        [1000000000, '#6e40e6']\n      ]\n    },\n    {\n      name: 'GDP',\n      description: 'Estimate total GDP in millions of dollars',\n      property: 'gdp_md_est',\n      stops: [\n        [0, '#f8d5cc'],\n        [1000, '#f4bfb6'],\n        [5000, '#f1a8a5'],\n        [10000, '#ee8f9a'],\n        [50000, '#ec739b'],\n        [100000, '#dd5ca8'],\n        [250000, '#c44cc0'],\n        [5000000, '#9f43d7'],\n        [10000000, '#6e40e6']\n      ]\n    }\n  ];\n  const mapContainerRef = useRef(null);\n  const [active, setActive] = useState(options[0]);\n  const [map, setMap] = useState(null);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    const map = new maplibregl.Map({\n      container: mapContainerRef.current,\n      style: 'https://demotiles.maplibre.org/style.json',\n      center: [5, 34],\n      zoom: 1.5\n    });\n\n    map.on('load', () => {\n\n      map.addSource('countries', {\n        type: 'geojson',\n        data\n      });\n\n      map.setLayoutProperty('countries-label', 'text-field', [\n        'format',\n        ['get', 'name_en'],\n        { 'font-scale': 1.2 },\n        '\\n',\n        {},\n        ['get', 'name'],\n        {\n          'font-scale': 0.8,\n          'text-font': [\n            'literal',\n            ['DIN Offc Pro Italic', 'Arial Unicode MS Regular']\n          ]\n        }\n      ]);\n\n      map.addLayer(\n        {\n          id: 'countries',\n          type: 'fill',\n          source: 'countries'\n        },\n        'countries-label'\n      );\n\n      map.setPaintProperty('countries', 'fill-color', {\n        property: active.property,\n        stops: active.stops\n      });\n\n      setMap(map);\n    });\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, []);\n\n  useEffect(() => {\n    paint();\n  }, [active]);\n\n  const paint = () => {\n    if (map) {\n      map.setPaintProperty('countries', 'fill-color', {\n        property: active.property,\n        stops: active.stops\n      });\n    }\n  };\n\n  const changeState = i => {\n    setActive(options[i]);\n    map.setPaintProperty('countries', 'fill-color', {\n      property: active.property,\n      stops: active.stops\n    });\n  };\n\n  return (\n    <div>\n      <div ref={mapContainerRef} className='map-container' />\n      <Legend active={active} stops={active.stops} />\n      <Optionsfield\n        options={options}\n        property={active.property}\n        changeState={changeState}\n      />\n    </div>\n  );\n};\n\nexport default Map;\n","import React from 'react';\nimport Map from './Map';\n\nfunction App() {\n  return (\n    <div>\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}