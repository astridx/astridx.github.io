{"version":3,"sources":["components/Tooltip.js","Map.js","App.js","index.js"],"names":["Tooltip","feature","id","properties","layer","NAME","Map","mapContainerRef","useRef","tooltipRef","maplibregl","Popup","offset","useEffect","map","container","current","style","center","zoom","on","e","features","length","getCanvas","cursor","queryRenderedFeatures","point","tooltipNode","document","createElement","ReactDOM","render","setLngLat","lngLat","setDOMContent","addTo","remove","className","ref","App","StrictMode","getElementById"],"mappings":"sQAceA,G,YAZC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACTC,EAAOD,EAAQE,WAAfD,GAER,OACE,yBAAKA,GAAE,kBAAaA,IAClB,iDADF,IACkCD,EAAQG,MAAM,gBAC9C,6BACA,yCAHF,IAG0BH,EAAQE,WAAWE,QCoDlCC,EAtDH,WACV,IAAMC,EAAkBC,iBAAO,MACzBC,EAAaD,iBAAO,IAAIE,IAAWC,MAAM,CAAEC,OAAQ,MA6CzD,OA1CAC,qBAAU,WACR,IAAMC,EAAM,IAAIJ,IAAWJ,IAAI,CAC7BS,UAAWR,EAAgBS,QAC3BC,MAAO,4CACPC,OAAQ,EAAE,MAAO,OACjBC,KAAM,OAkCR,OA9BAL,EAAIM,GAAG,cAAc,SAAAC,GACfA,EAAEC,SAASC,SACbT,EAAIU,YAAYP,MAAMQ,OAAS,cAKnCX,EAAIM,GAAG,cAAc,WACnBN,EAAIU,YAAYP,MAAMQ,OAAS,MAIjCX,EAAIM,GAAG,aAAa,SAAAC,GAClB,IAAMC,EAAWR,EAAIY,sBAAsBL,EAAEM,OAC7C,GAAIL,EAASC,OAAQ,CACnB,IAAMtB,EAAUqB,EAAS,GAGnBM,EAAcC,SAASC,cAAc,OAC3CC,IAASC,OAAO,kBAAC,EAAD,CAAS/B,QAASA,IAAa2B,GAG/CnB,EAAWO,QACRiB,UAAUZ,EAAEa,QACZC,cAAcP,GACdQ,MAAMtB,OAKN,kBAAMA,EAAIuB,YAChB,IAGD,6BACE,yBAAKC,UAAU,gBAAgBC,IAAKhC,MC7C3BiC,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCDNT,IAASC,OACP,kBAAC,IAAMS,WAAP,KACE,kBAAC,EAAD,OAEFZ,SAASa,eAAe,W","file":"static/js/main.a9540715.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Tooltip = ({ feature }) => {\n  const { id } = feature.properties;\n\n  return (\n    <div id={`tooltip-${id}`}>\n      <strong>Source Layer:</strong> {feature.layer[\"source-layer\"]}\n      <br />\n      <strong>Land:</strong> {feature.properties.NAME}\n    </div>\n  );\n};\n\nexport default Tooltip;\n","import React, { useRef, useEffect } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport \"maplibre-gl/dist/maplibre-gl.css\"\nimport './Map.css';\nimport Tooltip from './components/Tooltip';\nimport ReactDOM from 'react-dom';\n\nconst Map = () => {\n  const mapContainerRef = useRef(null);\n  const tooltipRef = useRef(new maplibregl.Popup({ offset: 15 }));\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    const map = new maplibregl.Map({\n      container: mapContainerRef.current,\n      style: 'https://demotiles.maplibre.org/style.json',\n      center: [-79.38, 43.65],\n      zoom: 12.5\n    });\n\n    // change cursor to pointer when user hovers over a clickable feature\n    map.on('mouseenter', e => {\n      if (e.features.length) {\n        map.getCanvas().style.cursor = 'pointer';\n      }\n    });\n\n    // reset cursor to default when user is no longer hovering over a clickable feature\n    map.on('mouseleave', () => {\n      map.getCanvas().style.cursor = '';\n    });\n\n    // add tooltip when users mouse move over a point\n    map.on('mousemove', e => {\n      const features = map.queryRenderedFeatures(e.point);\n      if (features.length) {\n        const feature = features[0];\n\n        // Create tooltip node\n        const tooltipNode = document.createElement('div');\n        ReactDOM.render(<Tooltip feature={feature} />, tooltipNode);\n\n        // Set tooltip on map\n        tooltipRef.current\n          .setLngLat(e.lngLat)\n          .setDOMContent(tooltipNode)\n          .addTo(map);\n      }\n    });\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <div className='map-container' ref={mapContainerRef} />\n    </div>\n  );\n};\n\nexport default Map;\n","import React from 'react';\nimport Map from './Map';\n\nfunction App() {\n  return (\n    <div>\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}